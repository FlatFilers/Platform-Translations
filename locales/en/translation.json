{
  "checklist": {
    "dropdowns": {
      "headings": {
        "sheet": "Snuggle Sheet",
        "workbook": "Puppy Playbook"
      }
    },
    "errors": {
      "cannotLoadChecklist": "Unable to load the pup-preparation checklist",
      "cannotLoadSheet": "Sheet is hiding (cannot be found)",
      "noWorkbooksDescription": "Our puppy checklist needs at least one playbook to be active. Please ask your developer to fetch the right settings. If this tail keeps wagging, contact support.",
      "noWorkbooksTitle": "Playbook Missing!"
    },
    "table": {
      "dataTypes": {
        "boolean": "Bark-olean",
        "date": "Playdate",
        "enum": "Enum of Bones",
        "number": "Paw Count",
        "reference": "Reference to the Vet",
        "string": "String of Sausages",
        "unknown": "Mystery Mutt"
      },
      "fieldTagComputed": "Puppy Calculations",
      "fieldTagRequired": "Paw-sitively Needed",
      "fieldTagUnique": "One-of-a-kind",
      "headings": {
        "dataType": "Breed Type",
        "description": "Puppy Profile",
        "field": "Fur-tastic Field"
      }
    },
    "title": "Puppy Paw-requisites Checklist"
  },
  "sidebar": {
    "checklist": "Puppy checklist",
    "emptyWorkbook": "Empty dig site",
    "files": "Chew Toys",
    "readOnlyIconTooltip": "This Scent Mark is read-only"
  },
  "myDocument": {
    "title": "Your first Puppy Space!",
    "body": "# Tailor the language and text in your Flatfile Spaces\n\n---\n\nEnable translations, customizations, and text overrides for your Spaces easily with Flatfile's localization support.\n\n## Making this Space\n\nThis Space has been configured with localization options.\n\nHere's a look at the code that was used to create it:\n\n```jsx\nimport api from \"@flatfile/api\";\nimport { Client, FlatfileEvent, FlatfileListener } from \"@flatfile/listener\";\n\nexport default function flatfileEventListener(listener: Client) {\n  listener.filter({ job: \"space:configure\" }, (configure: FlatfileListener) => {\n    configure.on(\n      \"job:ready\",\n      async ({ context: { spaceId, environmentId, jobId } }: FlatfileEvent) => {\n        try {\n          await api.jobs.ack(jobId, {\n            info: \"Job started.\",\n            progress: 10,\n          });\n\n          //Documents are using translation keys instead of hardcoding strings\n          const document = await api.documents.create(spaceId, {\n            title: \"myDocument.title\",\n            body: \"myDocument.body\",\n          });\n\n          //Setting the translation path for the space\n          await api.spaces.update(spaceId, {\n            metadata: {\n              sidebarConfig: {\n                defaultPage: {\n                  documentId: document.data.id,\n                },\n              },\n            },\n            translationsPath:\n              \"https://raw.githubusercontent.com/FlatFilers/Platform-Translations/kitchen-sink/locales/en/translation.json\",\n          });\n\n\n          await api.workbooks.create({\n            spaceId,\n            environmentId,\n            ...\n          });\n\n          await api.jobs.complete(jobId, {\n            outcome: {\n              message: \"Job completed.\",\n            },\n          });\n        } catch (error: any) {\n          console.error(\"Error: \", error.stack);\n\n          await api.jobs.fail(jobId, {\n            outcome: {\n              message: \"Job error.\",\n            },\n          });\n        }\n      }\n    );\n  });\n}\n```\n\n## Things you can do here\n\nTry Different Languages for Some Puppy Fun! üåç\n\nWouldn't it be pawsome if puppies could speak every language? Well, here in our Puppy Localization Playground, you can experience just that!\n\nüêï Give it a try:\n\n- **English**: Just add `?lng=en` to the URL and reload the page for an experience suited to the English Pointer!\n- **German**: Append `?lng=de` to the end of the URL and hit enter for a woof-tastic German experience.\n- **French**: Use `?lng=fr` for a delightful French translation that even French poodles would approve of!\n- **Spanish**: Want to bark in Spanish? Just add `?lng=es` to the URL.\n\nWe're not teaching puppies to translate, but our magical translation.json file does the trick. The best part? Our Markdown page updates itself dynamically based on the selected language! No hardcoding needed. ü™Ñ\n\nSo, as you navigate through our Puppy Localization Playground, notice how the words transform into the language you choose. üåü\n\nGo ahead, try it out! Explore the puppy world in different languages and see how localization makes the web a tail-waggingly good place for everyone! üåê\n\nCheck out our [pupified translations here](https://github.com/FlatFilers/Platform-Translations/blob/kitchen-sink/locales/en/translation.json). You can also checkout the source code for this space in [Typescript](https://github.com/FlatFilers/flatfile-docs-kitchen-sink/blob/main/typescript/localization/index.ts) and in [Javascript](https://github.com/FlatFilers/flatfile-docs-kitchen-sink/blob/main/javascript/localization/index.js).\n\n## Further documentation\n\nRead more about customizing your Space text [here](https://flatfile.com/docs/guides/localization).\n\n## Learn more about Flatfile by trying our [other demos](https://platform.flatfile.com/getting-started)\n"
  },
  "mySubmitAction": {
    "label": "Submit",
    "description": "Done marking all the trees? Hit submit to send your sniff data",
    "tooltip": "Submit your sniff data",
    "outcome": {
      "heading": "Paw-some import!",
      "message": "All sniff data has been submitted! You can now click the link below.",
      "urlLabel": "Return to the doghouse"
    }
  }
}
