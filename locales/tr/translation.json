{
  "myDocument": {
    "title": "Lokalizasyon Alanınız!",
    "body": "# Flatfile Alanlarınızdaki dili ve metni özelleştirin\n\n---\n\nFlatfile'ın lokalizasyon desteğiyle Alanlarınız için çevirileri, özelleştirmeleri ve metin değişikliklerini kolayca etkinleştirin.\n\n## Burada yapabilecekleriniz\n\nFarklı dilleri deneyin ve seçtiğiniz dile göre markdown sayfamızın dinamik olarak nasıl güncellendiğini izleyin!! 🌍\n\nURL'nin sonuna `?lng=en` (İngilizce için), `?lng=es` (İspanyolca için) ekleyin ve enter tuşuna basın. Desteklenen dillerin ve kodlarının tam listesini [burada](https://flatfile.com/docs/guides/localization#available-languages) görün\n\n[Çevirilerimizi burada](https://github.com/FlatFilers/Platform-Translations/blob/demo-structure/locales/en/translation.json) kontrol edin. Bu alanın kaynak kodunu [Typescript](https://github.com/FlatFilers/flatfile-docs-kitchen-sink/blob/main/typescript/localization/index.ts) ve [Javascript](https://github.com/FlatFilers/flatfile-docs-kitchen-sink/blob/main/javascript/localization/index.js) üzerinden de inceleyebilirsiniz.\n\n## Bu Alanın Yapılması\n\nBu Alan, lokalizasyon seçenekleriyle yapılandırılmıştır.\n\nİşte bunu oluşturmak için kullanılan kodun bir görünümü:\n\n```jsx\nimport api from \"@flatfile/api\";\nimport { Client, FlatfileEvent, FlatfileListener } from \"@flatfile/listener\";\n\nexport default function flatfileEventListener(listener: Client) { jsx\nimport api from \"@flatfile/api\";\nimport { Client, FlatfileEvent, FlatfileListener } from \"@flatfile/listener\";\n\nexport default function flatfileEventListener(listener: Client) {\n  listener.filter({ job: \"space:configure\" }, (configure: FlatfileListener) => {\n    configure.on(\n      \"job:ready\",\n      async ({ context: { spaceId, environmentId, jobId } }: FlatfileEvent) => {\n        try {\n          await api.jobs.ack(jobId, {\n            info: \"Job started.\",\n            progress: 10,\n          });\n\n          //Documents are using translation keys instead of hardcoding strings\n          const document = await api.documents.create(spaceId, {\n            title: \"myDocument.title\",\n            body: \"myDocument.body\",\n          });\n\n          //Setting the translation path for the space\n          await api.spaces.update(spaceId, {\n            metadata: {\n              sidebarConfig: {\n                defaultPage: {\n                  documentId: document.data.id,\n                },\n              },\n            },\n            translationsPath:\n              \"https://raw.githubusercontent.com/FlatFilers/Platform-Translations/demo-structure/locales/en/translation.json\",\n          });\n\n\n          await api.workbooks.create({\n            spaceId,\n            environmentId,\n            ...\n          });\n\n          await api.jobs.complete(jobId, {\n            outcome: {\n              message: \"Job completed.\",\n            },\n          });\n        } catch (error: any) {\n          console.error(\"Error: \", error.stack);\n\n          await api.jobs.fail(jobId, {\n            outcome: {\n              message: \"Job error.\",\n            },\n          });\n        }\n      }\n    );\n  });\n}\n}\n```\n\n## Daha Fazla Dokümantasyon\n\nAlan metninizin özelleştirilmesi hakkında daha fazla bilgi edinin [burada](https://flatfile.com/docs/guides/localization).\n\nDiğer demolarımızı deneyerek Flatfile hakkında daha fazla bilgi edinin [burada](https://platform.flatfile.com/getting-started)\n"
  }
}
