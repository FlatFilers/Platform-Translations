{
  "myDocument": {
    "title": "Ihr Lokalisierungsraum!",
    "body": "# Passen Sie Sprache und Text in Ihren Flatfile Spaces an\n\n---\n\nAktivieren Sie √úbersetzungen, Anpassungen und Textersetzungen f√ºr Ihre R√§ume einfach mit der Lokalisierungsunterst√ºtzung von Flatfile.\n\n## Was Sie hier tun k√∂nnen\n\nProbieren Sie verschiedene Sprachen aus und beobachten Sie, wie sich unsere Markdown-Seite dynamisch basierend auf der ausgew√§hlten Sprache aktualisiert!! üåç\n\nF√ºgen Sie einfach `?lng=en` (f√ºr Englisch), `?lng=es` (f√ºr Spanisch) am Ende der URL hinzu und dr√ºcken Sie Enter. Sehen Sie hier eine vollst√§ndige Liste der unterst√ºtzten Sprachen und ihrer Codes [hier](https://flatfile.com/docs/guides/localization#available-languages)\n\nSchauen Sie sich unsere [√úbersetzungen hier](https://github.com/FlatFilers/Platform-Translations/blob/demo-structure/locales/en/translation.json) an. Sie k√∂nnen auch den Quellcode f√ºr diesen Raum in [Typescript](https://github.com/FlatFilers/flatfile-docs-kitchen-sink/blob/main/typescript/localization/index.ts) und in [Javascript](https://github.com/FlatFilers/flatfile-docs-kitchen-sink/blob/main/javascript/localization/index.js) ansehen.\n\n## Diesen Raum erstellen\n\nDieser Raum wurde mit Lokalisierungsoptionen konfiguriert.\n\nHier ist ein Blick auf den Code, der verwendet wurde, um ihn zu erstellen:\n\n```jsx\nimport api from \"@flatfile/api\";\nimport { Client, FlatfileEvent, FlatfileListener } from \"@flatfile/listener\";\n\nexport default function flatfileEventListener(listener: Client) { jsx\nimport api from \"@flatfile/api\";\nimport { Client, FlatfileEvent, FlatfileListener } from \"@flatfile/listener\";\n\nexport default function flatfileEventListener(listener: Client) {\n  listener.filter({ job: \"space:configure\" }, (configure: FlatfileListener) => {\n    configure.on(\n      \"job:ready\",\n      async ({ context: { spaceId, environmentId, jobId } }: FlatfileEvent) => {\n        try {\n          await api.jobs.ack(jobId, {\n            info: \"Job started.\",\n            progress: 10,\n          });\n\n          //Documents are using translation keys instead of hardcoding strings\n          const document = await api.documents.create(spaceId, {\n            title: \"myDocument.title\",\n            body: \"myDocument.body\",\n          });\n\n          //Setting the translation path for the space\n          await api.spaces.update(spaceId, {\n            metadata: {\n              sidebarConfig: {\n                defaultPage: {\n                  documentId: document.data.id,\n                },\n              },\n            },\n            translationsPath:\n              \"https://raw.githubusercontent.com/FlatFilers/Platform-Translations/demo-structure/locales/en/translation.json\",\n          });\n\n\n          await api.workbooks.create({\n            spaceId,\n            environmentId,\n            ...\n          });\n\n          await api.jobs.complete(jobId, {\n            outcome: {\n              message: \"Job completed.\",\n            },\n          });\n        } catch (error: any) {\n          console.error(\"Error: \", error.stack);\n\n          await api.jobs.fail(jobId, {\n            outcome: {\n              message: \"Job error.\",\n            },\n          });\n        }\n      }\n    );\n  });\n}\n}\n```\n\n## Weiterf√ºhrende Dokumentation\n\nErfahren Sie mehr √ºber die Anpassung Ihres Space-Textes [hier](https://flatfile.com/docs/guides/localization).\n\n## Erfahren Sie mehr √ºber Flatfile, indem Sie unsere [weiteren Demos](https://platform.flatfile.com/getting-started) ausprobieren\n"
  }
}
